
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;
daemon off;

events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;
   
     tcp_nodelay on;    
    client_body_buffer_size  512k;   
    proxy_connect_timeout    5;   
    proxy_read_timeout       60;   
    proxy_send_timeout       5;   
    proxy_buffer_size        16k;   
    proxy_buffers            4 64k;   
    proxy_busy_buffers_size 128k;  	
    proxy_temp_file_write_size 128k;  

    gzip on;   
    gzip_min_length  1k;   
    gzip_buffers 4 16k;   
    gzip_http_version 1.1;   
    gzip_comp_level 2;   
    gzip_types text/plain application/x-javascript text/css application/xml;   
    gzip_vary on;

    proxy_temp_path     /export/data/tmp;
    proxy_cache_path    /export/data/cache   levels=1:2   keys_zone=cache_one:200m inactive=2d max_size=10g ;

    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        #location / {
        #    root   html;
        #    index  index.html index.htm;
        #}
        
        location / {
            proxy_cache         cache_one;
            proxy_cache_valid   200 304 12h;
            proxy_cache_key     $host$uri$is_args$args;
            proxy_set_header    Host  $host;
            proxy_set_header    X-Forwarded-For  $remote_addr;
            proxy_pass          http://localhost:9090;

            #log_format         cache '***$time_local '  '***$upstream_cache_status '  '***Cache-Control: $upstream_http_cache_control ' '***Expires: $upstream_http_expires ' '***"$request" ($status) ' '***"$http_user_agent" ';
            #access_log         /var/log/nginx/cache.log cache;

            expires             1d;
            limit_except GET {
                allow           127.0.0.1;
                deny            all;
            }
            dav_methods         off;
            dav_access          user:r  group:r  all:r;
        }

        location ~ /purge(/.*) {
            allow    192.168.0.0/16;
            #allow    all;
            proxy_cache_purge    cache_one   $host$1$is_args$args;
        }

        location ~ /(.*)(\.jpg|\.bmp|\.gif|\.png|\.jpeg)!300 {
            set $img_root /export/data/pic;
            set $filePath "$img_root/$1_c_300$2";
            set $reqPath "/$1_c_300$2";
            set $oriFilePath "$img_root/$1$2";

            if (-f $filePath) {
                rewrite /(.*)(\.jpg|\.bmp|\.gif|\.png|\.jpeg)!300 /$1_c_300$2 last;
            }

            if (!-f $filePath) {
                rewrite_by_lua '
                    local command = "/usr/local/GraphicsMagick-1.3.20/bin/gm convert " ..  ngx.var.oriFilePath  .. " -thumbnail 300x -quality 95 " .. ngx.var.filePath;
                    os.execute(command);
                    ngx.req.set_uri(ngx.var.reqPath, true);
                ';
            }
        }

        location ~ /(.*)(\.jpg|\.bmp|\.gif|\.png|\.jpeg)!vcard300 {
            set $img_root /export/data/pic;
            set $filePath "$img_root/$1_c_vcard300$2";
            set $reqPath "/$1_c_vcard300$2";
            set $oriFilePath "$img_root/$1$2";

            if (-f $filePath) {
                rewrite /(.*)(\.jpg|\.bmp|\.gif|\.png|\.jpeg)!vcard300 /$1_c_vcard300$2 last;
                #return 407;
            }

            if (!-f $filePath) {
                rewrite_by_lua '
                    local command = "/usr/local/GraphicsMagick-1.3.20/bin/gm convert " ..  ngx.var.oriFilePath  .. " -thumbnail 300x -quality 70 " .. ngx.var.filePath;
                    os.execute(command);
                    ngx.req.set_uri(ngx.var.reqPath, true);
                ';
            }
        }

        location ~ /(.*)(\.jpg|\.bmp|\.gif|\.png|\.jpeg)!800 {
            set $img_root /export/data/pic;
            set $filePath "$img_root/$1_c_800$2";
            set $reqPath "/$1_c_800$2";
            set $oriFilePath "$img_root/$1$2";

            if (-f $filePath) {
                rewrite /(.*)(\.jpg|\.bmp|\.gif|\.png|\.jpeg)!800 /$1_c_800$2 last;
            }

            if (!-f $filePath) {
                rewrite_by_lua '
                    local command = "/usr/local/GraphicsMagick-1.3.20/bin/gm convert " ..  ngx.var.oriFilePath  .. " -thumbnail 800x -quality 95 " .. ngx.var.filePath;
                    os.execute(command);
                    ngx.req.set_uri(ngx.var.reqPath, true);
                ';
            }
        }


        location ~ /(.*)(\.jpg|\.bmp|\.gif|\.png|\.jpeg)!vh150 {
            set $img_root /export/data/pic;
            set $filePath "$img_root/$1_c_vh150$2";
            set $reqPath "/$1_c_vh150$2";
            set $oriFilePath "$img_root/$1$2";

            if (-f $filePath) {
                rewrite /(.*)(\.jpg|\.bmp|\.gif|\.png|\.jpeg)!vh150 /$1_c_vh150$2 last;
            }

            if (!-f $filePath) {
                rewrite_by_lua '
                    local command = "/usr/local/GraphicsMagick-1.3.20/bin/gm convert " ..  ngx.var.oriFilePath  .. " -thumbnail 150x -quality 75 " .. ngx.var.filePath;
                    os.execute(command);
                    ngx.req.set_uri(ngx.var.reqPath, true);
                ';
            }
        }

       location ~ /(.*)(\.jpg|\.bmp|\.gif|\.png|\.jpeg)!vrecruitimg600 {
            set $img_root /export/data/pic;
            set $filePath "$img_root/$1_c_vrecruitimg600$2";
            set $reqPath "/$1_c_vrecruitimg600$2";
            set $oriFilePath "$img_root/$1$2";

            if (-f $filePath) {
                rewrite /(.*)(\.jpg|\.bmp|\.gif|\.png|\.jpeg)!vrecruitimg600 /$1_c_vrecruitimg600$2 last;
            }

            if (!-f $filePath) {
                rewrite_by_lua '
                    local command = "/usr/local/GraphicsMagick-1.3.20/bin/gm convert " ..  ngx.var.oriFilePath  .. " -thumbnail 600x -quality 70 " .. ngx.var.filePath;
                    os.execute(command);
                    ngx.req.set_uri(ngx.var.reqPath, true);
                ';
            }
        }

        location ~ /(.*)(\.jpg|\.bmp|\.gif|\.png|\.jpeg)!vrecruitimg220 {
            set $img_root /export/data/pic;
            set $filePath "$img_root/$1_c_vrecruitimg220$2";
            set $reqPath "/$1_c_vrecruitimg220$2";
            set $oriFilePath "$img_root/$1$2";

            if (-f $filePath) {
                rewrite /(.*)(\.jpg|\.bmp|\.gif|\.png|\.jpeg)!vrecruitimg220 /$1_c_vrecruitimg220$2 last;
            }

            if (!-f $filePath) {
                rewrite_by_lua '
                    local infoFile = ngx.var.filePath .. ".info";
                    local infoCommand = "/usr/local/GraphicsMagick-1.3.20/bin/gm identify " .. ngx.var.oriFilePath .. " | awk \'{print$3}\' > " .. infoFile;
                    local infoResult = os.execute(infoCommand);

                    if infoResult == 0 then
                        local f = io.open(infoFile, "r");
                        local pInfo = f:read();
                        f:close();
                        local w, h = string.match(pInfo, "(%d+)x(%d+)");
                        if w == nil or h == nil then
                            ngx.exit(404);
                        else
                            local command = "/usr/local/GraphicsMagick-1.3.20/bin/gm convert " ..  ngx.var.oriFilePath;
                            if tonumber(w) > tonumber(h) then
                                command = command .. " -thumbnail 220x -quality 70 " .. ngx.var.filePath;
                            else
                                command = command .. " -thumbnail x220 -quality 70 " .. ngx.var.filePath;
                            end;
                            os.execute(command);
                            ngx.req.set_uri(ngx.var.reqPath, true);
                        end;
                        
                    else
                        ngx.exit(404);
                    end;
                ';
            }
        }

       
        location ~ /(.*)(\.jpg|\.bmp|\.gif|\.png|\.jpeg)!vd360 {
            set $img_root /export/data/pic;
            set $filePath "$img_root/$1_c_vd360$2";
            set $reqPath "/$1_c_vd360$2";
            set $oriFilePath "$img_root/$1$2";

            if (-f $filePath) {
                rewrite /(.*)(\.jpg|\.bmp|\.gif|\.png|\.jpeg)!vd360 /$1_c_vd360$2 last;
            }

            if (!-f $filePath) {
                rewrite_by_lua '
                    local infoFile = ngx.var.filePath .. ".info";
                    local infoCommand = "/usr/local/GraphicsMagick-1.3.20/bin/gm identify " .. ngx.var.oriFilePath .. " | awk \'{print$3}\' > " .. infoFile;
                    local infoResult = os.execute(infoCommand);

                    if infoResult == 0 then
                        local f = io.open(infoFile, "r");
                        local pInfo = f:read();
                        f:close();
                        local w, h = string.match(pInfo, "(%d+)x(%d+)");
                        if w == nil or h == nil then
                            ngx.exit(404);
                        else
                            local command = "/usr/local/GraphicsMagick-1.3.20/bin/gm convert " ..  ngx.var.oriFilePath;
                            if tonumber(w) > tonumber(h) then
                                command = command .. " -thumbnail x360 -quality 75 " .. ngx.var.filePath;
                            else
                                command = command .. " -thumbnail 360x -quality 75 " .. ngx.var.filePath;
                            end;
                            os.execute(command);
                            ngx.req.set_uri(ngx.var.reqPath, true);
                        end;
                        
                    else
                        ngx.exit(404);
                    end;
                ';
            }
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }

    server{
        listen 9090; 
        server_name localhost; 
        
        client_max_body_size       1024M;
        keepalive_timeout          1800s;

        create_full_put_path       on;
        location / { 
            root                   /export/data/pic; 
            client_body_temp_path  /export/data/client_temp;

            dav_methods            PUT DELETE;
            dav_access             user:rw group:rw all:rw;

            limit_except  GET {
                allow    192.168.0.0/16;
                #deny all;
            }
        } 
        access_log off;
     }

    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}

